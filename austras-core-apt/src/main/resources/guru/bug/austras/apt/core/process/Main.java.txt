package $PACKAGE_NAME$;

#IMPORTS#
org.slf4j.Logger
org.slf4j.LoggerFactory
guru.bug.austras.provider.Provider
java.util.Collection
guru.bug.austras.provider.CollectionProvider
java.util.List
guru.bug.austras.startup.StartupServicesStarter
#END#

public class $SIMPLE_CLASS_NAME$ {
    public static final Logger LOGGER = LoggerFactory.getLogger($QUALIFIED_CLASS_NAME$.class);

    public static void main(String[] args) {
        LOGGER.info("Application is initializing...");
        #COMPONENTS#

        LOGGER.info("Initializing provider for $COMPONENT_NAME$");
        #WITH_DEPENDENCIES#
        var $COMPONENT_PROVIDER_VAR$ = new $COMPONENT_PROVIDER_CLASS$(
            #COMPONENT_PROVIDER_DEPENDENCIES#
            #COLLECTION_DEPENDENCY#
            new CollectionProvider<>($DEPENDENCY_INITIALIZATION$)$OPTIONAL_COMMA_SEPARATOR$
            #END#
            #UNWRAPPED_COLLECTION_DEPENDENCY#
            List.of($DEPENDENCY_INITIALIZATION$)$OPTIONAL_COMMA_SEPARATOR$
            #END#
            #STANDARD_DEPENDENCY#
            $DEPENDENCY_INITIALIZATION$$OPTIONAL_COMMA_SEPARATOR$
            #END#
            #UNWRAPPED_STANDARD_DEPENDENCY#
            $DEPENDENCY_INITIALIZATION$$OPTIONAL_COMMA_SEPARATOR$
            #END#
            #END#
        );
        #END#
        #WITHOUT_DEPENDENCIES#
        var $COMPONENT_PROVIDER_VAR$ = new $COMPONENT_PROVIDER_CLASS$();
        #END#
        #END#

        LOGGER.info("Starting up services...");
        var $STARTER_NAME$ = $STARTER_PROVIDER_NAME$.get();
        $STARTER_NAME$.initAll();
        
        LOGGER.info("Application is ready!");
    }
}