package $PACKAGE_NAME$;

#IMPORTS#
guru.bug.austras.core.qualifiers.Broadcast
guru.bug.austras.core.qualifiers.Qualifier
guru.bug.austras.core.qualifiers.QualifierProperty
java.util.Collection
java.util.List
org.slf4j.Logger
org.slf4j.LoggerFactory
#END#

$BROADCASTER_QUALIFIERS$
public class $SIMPLE_CLASS_NAME$ implements $EVENTS_INTERFACE$ {
    private static final Logger LOG = LoggerFactory.getLogger($SIMPLE_CLASS_NAME$.class);
    private final Collection<? extends $EVENTS_INTERFACE$> receivers;

    public $SIMPLE_CLASS_NAME$($DEPENDENCIES_QUALIFIERS$ Collection<? extends $EVENTS_INTERFACE$> receivers) {
        this.receivers = List.copyOf(receivers);
    }

    #METHODS#
    public void $METHOD_NAME$($METHOD_PARAMS$) {
        for (var receiver : receivers) {
            try {
                receiver.$METHOD_NAME$($METHOD_PARAM_NAMES$);
            } catch (Exception e) {
                LOG.error("Exception while broadcasting", e);
            }
        }
    }

    #END#
}